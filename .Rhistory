# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot, width=480, heigh = 480)
dev.off()
exp_plot <- paste0(dWorkingDir,I_export_Plot,'/plot2.png')
# exp_plot <- paste0(dWorkingDir,'/plot2.png')
#
# png(exp_plot)
#
# V_par <- par()
plot.ts(epc$Global_active_power,
ylab = "Global Active Power (kilowatts)",
)
title(main = list('Plot 2',cex = 1.5),outer = TRUE, adj = 0.0)
# par(V_par)
# =================================================================================
# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot, width=480, heigh = 480)
dev.off()
setwd(I_Directory)
rm(epc)
rm(list=ls(pattern='I_'))
rm(list=ls(pattern='c'))
rm(list=ls(pattern='d'))
rm(list=ls(pattern='e'))
rm(list=ls(pattern='f'))
rm(list=ls(pattern='m'))
rm(list=ls(pattern='v'))
# =================================================================================
# End of the Script
# =================================================================================
legend("topright","Sub_metering_3", lty = 1, col = "blue")
rm(st)
v_par <- par()
par(v_par)
v_par <- par()
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
options(warn=-1)
par(v_par)
options(warn=-1)
par$mfrow
par("mfrow")
par(mfrow = c(2,2))
par(v_par)
# Program: plot4.R
# Author: Ricardo Rodriguez 2015/04
#
# Dataset:
# Lichman, M. (2013). UCI Machine Learning Repository [http://archive.ics.uci.edu/ml].
# Irvine, CA: University of California, School of Information and Computer Science.
#
# https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
#
#
# Modify this line to use your own directory path
#  NOTE: (dWorkingDir)
#     In blank would be your actual working directory
#
dWorkingDir <- ""
dWorkingDir <- "C:/ricardor/Coursera/Exploratory_Data_Analysis/ExData_Plotting1"
I_Data <- "/data"
I_export_Data <- "/data"
I_export_Plot <- "/figure_replica"
#
# I_Programs <- "Your own directory path where the scripts are stored"
#  This directory cointains additional functions
#
I_Programs <- "/programs"
I_Programs <- paste0(dWorkingDir,I_Programs)
#
I_Directory <- getwd() ## Saves the actual working directory
# =================================================================================
#  Loading auxiliary scripts with functions
# =================================================================================
source(paste0(I_Programs,"/dirFunctions.R"))
source(paste0(I_Programs,"/Files_mdl.R"))
# =================================================================================
# Validate Directory structure.
# Create directories if necessary.
#   Data Directory
#   Data Export Directory
# =================================================================================
source(paste0(I_Programs,"/set_directories.R"))
# =================================================================================
# Working with the pre-processed Data
# =================================================================================
cFile2Read <- paste0(dWorkingDir,I_Data,'/household_power_consumption.txt')
epc <-   read.table(cFile2Read, header= TRUE, sep = ",")
# sapply(epc,class)
#
# =================================================================================
# Conversion of the Date and Time Columns
# Time Adds the Record Date
# =================================================================================
#head(epc$Time)
epc$Time  <- strptime(paste(epc$Date,epc$Time),format = "%d/%m/%Y %H:%M:%S", tz = "")
# head(epc$Date)
epc$Date <- as.Date(epc$Date,"%d/%m/%Y")
# class(epc$Date)
# sapply(epc,class)
# =================================================================================
# Creating the plot
# =================================================================================
exp_plot <- paste0(dWorkingDir,I_export_Plot,'/plot4.png')
# exp_plot <- paste0(dWorkingDir,'/plot4.png')
#
# png(exp_plot)
#
v_par <- par()
#
# splitting the screen in 4
#
par(mfrow = c(2,2))
plot.ts(epc$Global_active_power,
ylab = "Global Active Power (kilowatts)")
names(epc)
plot.ts(epc$Voltage,
ylab = "Voltage")
plot(epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Sub_metering_1, col = "black")
lines(epc$Sub_metering_2, col = "red")
lines(epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE)
plot.ts(epc$Global_reactive_power,
ylab = "Global_reactive_power")
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
options(warn=-1)
par(v_par)
options(warn=-1)
dev.copy(png,exp_plot, width=480, heigh = 480)
dev.off()
options(warn=0)
par(v_par)
plot.ts(epc$Global_active_power,
ylab = "Global Active Power (kilowatts)")
plot(epc$Date,c$Global_active_power,type='l')
plot(epc$Date,epc$Global_active_power,type='l')
plot(epc$Date,epc$Global_active_power)
plot(epc$Date,epc$Global_active_power,type='l')
plot(epc$Date,epc$Global_active_power,type='n')
plot.ts(epc$Global_active_power,
ylab = "Global Active Power (kilowatts)")
plot(epc$Date,epc$Global_active_power,type='n')
plot.ts(epc$Global_active_power,ylab = "Global Active Power (kilowatts)")
plot(epc$Date,epc$Global_active_power,type='n',ylab = "Global Active Power (kilowatts)")
plot(epc$Date,epc$Global_active_power,type='n',
xlab = "",
ylab = "Global Active Power (kilowatts)")
lines(epc$Global_active_power, col = "black")
lines(epc$Global_active_power, col = "black")
lines(epc$Global_active_power, col = "black")
plot(epc$Date,epc$Global_active_power,type='n')
plot(epc$Date,epc$Global_active_power,type='n',
xlab = "",
ylab = "Global Active Power (kilowatts)")
lines(epc$Global_active_power, col = "black")
title(main = list('Plot 2',cex = 1.5),outer = TRUE, adj = 0.0)
lines(epc$Date,epc$Global_active_power, col = "black")
plot(epc$Date,y = epc$Global_active_power,type='n',
xlab = "",
ylab = "Global Active Power (kilowatts)")
lines(y=epc$Date,epc$Global_active_power, col = "black")
plot.ts(epc$Global_active_power,ylab = "Global Active Power (kilowatts)")
plot.ts(epc$Global_active_power,xlab = "", ylab = "Global Active Power (kilowatts)")
lines(epc$Global_active_power, col = "black")
plot(epc$Date,y = epc$Global_active_power,type='n', xlab = "", ylab = "Global Active Power (kilowatts)")
lines(epc$Global_active_power, col = "black")
plot(epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Sub_metering_1, col = "black")
lines(epc$Sub_metering_2, col = "red")
lines(epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE)
lines(epc$Global_active_power, col = "black")
?labels
?axis
Sys.setlocale
plot(epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Sub_metering_1, col = "black")
lines(epc$Sub_metering_2, col = "red")
lines(epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
title(main = list('Plot 3',cex = 1.5),outer = TRUE, adj = 0.0)
hist(as.numeric(epc$Global_active_power),
col="red",
ps = 9,
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power")
title(main = list('Plot 1',cex = 1.5),outer = TRUE, adj = 0.0)
plot.ts(epc$Global_active_power,xlab = "", ylab = "Global Active Power (kilowatts)")
title(main = list('Plot 2',cex = 1.5),outer = TRUE, adj = 0.0)
?plot.ts
plot.ts(epc$Global_active_power ~ epc$Date,xlab = "", ylab = "Global Active Power (kilowatts)")
plot.ts(epc$Date,xlab = "", ylab = "Global Active Power (kilowatts)")
plot.ts(epc$Time,xlab = "", ylab = "Global Active Power (kilowatts)")
plot.ts(epc$Global_active_power,xlab = "", ylab = "Global Active Power (kilowatts)")
plot(epc$Global_active_power ~ epc$Date,xlab = "", ylab = "Global Active Power (kilowatts)")
with(epc,plot(Gobal_active_power,Date))
with(epc,plot(Global_active_power,Date))
with(epc,plot(Date,Global_active_power))
with(epc,plot(Time,Global_active_power))
with(epc,plot(Time,Global_active_power, lty = 1))
with(epc,plot(Time,Global_active_power, pch = 2))
?pch
with(epc,plot(Time,Global_active_power, type = 'n'))
lines(epc$Global_active_power, col = "black")
with(epc,plot(Time,Global_active_power, type = 'l'))
with(epc,plot(Time,Global_active_power, type = 'l'))
title(main = list('Plot 1',cex = 1.5),outer = TRUE, adj = 0.0)
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power (kilowatts)"))
title(main = list('Plot 2',cex = 1.5),outer = TRUE, adj = 0.0)
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Sub_metering_1, col = "black")
lines(epc$Sub_metering_2, col = "red")
lines(epc$Sub_metering_3,col="blue")
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
plot.ts(epc$Time,epc$Global_active_power,
ylab = "Global Active Power (kilowatts)")
with(epc,plot(Time,Global_active_power, type = 'l'))
plot.ts(epc$Time,epc$Global_active_power,
ylab = "Global Active Power (kilowatts)")
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power (kilowatts)"))
title(main = list('Plot 2',cex = 1.5),outer = TRUE, adj = 0.0)
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power"))
title(main = list('Plot 2',cex = 1.5),outer = TRUE, adj = 0.0)
with(epc,plot(Time,Voltage, type = 'l',xlab = "", ylab = "Voltage"))
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Global_reactive_power"))
par(mfrow = c(2,2))
#
# plot.ts(epc$Global_active_power,ylab = "Global Active Power")
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power"))
#
# plot.ts(epc$Voltage,ylab = "Voltage")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Voltage"))
#
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
#
# plot.ts(epc$Global_reactive_power,ylab = "Global_reactive_power")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Global_reactive_power"))
#
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
#
options(warn=-1)
par(v_par)
options(warn=0)
# =================================================================================
# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot, width=480, heigh = 480)
dev.off()
par(mfrow = c(2,2))
#
# plot.ts(epc$Global_active_power,ylab = "Global Active Power")
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power"))
#
# plot.ts(epc$Voltage,ylab = "Voltage")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Voltage"))
#
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
#
# plot.ts(epc$Global_reactive_power,ylab = "Global_reactive_power")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Global_reactive_power"))
#
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
#
options(warn=-1)
par(v_par)
options(warn=0)
# =================================================================================
# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot)
dev.off()
par(mfrow = c(2,2))
#
# plot.ts(epc$Global_active_power,ylab = "Global Active Power")
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power"))
#
# plot.ts(epc$Voltage,ylab = "Voltage")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Voltage"))
#
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
#
# plot.ts(epc$Global_reactive_power,ylab = "Global_reactive_power")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Global_reactive_power"))
#
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
#
# =================================================================================
# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot)
dev.off()
options(warn=-1)
par(v_par)
options(warn=0)
par(mfrow = c(2,2))
#
# plot.ts(epc$Global_active_power,ylab = "Global Active Power")
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power"))
#
# plot.ts(epc$Voltage,ylab = "Voltage")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Voltage"))
#
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
#
# plot.ts(epc$Global_reactive_power,ylab = "Global_reactive_power")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Global_reactive_power"))
#
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
#
# =================================================================================
# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot, width=480, heigh = 480)
dev.off()
options(warn=-1)
par(v_par)
options(warn=0)
?legend
warnings()
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend(3,2,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
legend(3,5,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
legend(0,0,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
legend(10,10,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
legend(100,100,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
legend(list(x=10,y=10),c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
legend(list(x=100,y=100),c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
legend(.8,1.2,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.7)
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.3)
par(mfrow = c(2,2))
#
# plot.ts(epc$Global_active_power,ylab = "Global Active Power")
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power"))
#
# plot.ts(epc$Voltage,ylab = "Voltage")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Voltage"))
#
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.3)
#
# plot.ts(epc$Global_reactive_power,ylab = "Global_reactive_power")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Global_reactive_power"))
#
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
#
# =================================================================================
# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot, width=480, heigh = 480)
dev.off()
options(warn=-1)
par(v_par)
options(warn=0)
par(mfrow = c(2,2))
#
# plot.ts(epc$Global_active_power,ylab = "Global Active Power")
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power"))
#
# plot.ts(epc$Voltage,ylab = "Voltage")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Voltage"))
#
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.5)
#
# plot.ts(epc$Global_reactive_power,ylab = "Global_reactive_power")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Global_reactive_power"))
#
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
#
# =================================================================================
# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot, width=480, heigh = 480)
dev.off()
options(warn=-1)
par(v_par)
options(warn=0)
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.5, bty = "n")
par(mfrow = c(2,2))
#
# plot.ts(epc$Global_active_power,ylab = "Global Active Power")
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power"))
#
# plot.ts(epc$Voltage,ylab = "Voltage")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Voltage"))
#
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.5, bty = "n")
#
# plot.ts(epc$Global_reactive_power,ylab = "Global_reactive_power")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Global_reactive_power"))
#
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
#
# =================================================================================
# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot, width=480, heigh = 480)
dev.off()
options(warn=-1)
par(v_par)
options(warn=0)
# =================================================================================
par(mfrow = c(2,2))
#
# plot.ts(epc$Global_active_power,ylab = "Global Active Power")
with(epc,plot(Time,Global_active_power, type = 'l',xlab = "", ylab = "Global Active Power"))
#
# plot.ts(epc$Voltage,ylab = "Voltage")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Voltage"))
#
plot(epc$Time,epc$Sub_metering_1,type='n',ylab='Energy sub metering', xlab="")
lines(epc$Time,epc$Sub_metering_1, col = "black")
lines(epc$Time,epc$Sub_metering_2, col = "red")
lines(epc$Time,epc$Sub_metering_3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = 1,
xjust = 1,
col = c("black","red","blue"), merge = TRUE, cex = 0.5, bty = "n")
#
# plot.ts(epc$Global_reactive_power,ylab = "Global_reactive_power")
with(epc,plot(Time,Voltage, type = 'l',xlab = "datetime", ylab = "Global_reactive_power"))
#
title(main = list('Plot 4',cex = 1.5),outer = TRUE, adj = 0.0)
#
# =================================================================================
# Copy the plot to the file
# =================================================================================
dev.copy(png,exp_plot, width=480, heigh = 480)
dev.off()
options(warn=-1)
par(v_par)
options(warn=0)
getwd()
setwd(I_Directory)
rm(epc)
rm(list=ls(pattern='I_'))
rm(list=ls(pattern='c'))
rm(list=ls(pattern='d'))
rm(list=ls(pattern='e'))
rm(list=ls(pattern='f'))
rm(list=ls(pattern='m'))
rm(list=ls(pattern='v'))
# =================================================================================
# End of the Script
# =================================================================================
source('C:/ricardor/Coursera/Exploratory_Data_Analysis/ExData_Plotting1/plot1.R')
source('C:/ricardor/Coursera/Exploratory_Data_Analysis/ExData_Plotting1/plot2.R')
source('C:/ricardor/Coursera/Exploratory_Data_Analysis/ExData_Plotting1/plot3.R')
source('C:/ricardor/Coursera/Exploratory_Data_Analysis/ExData_Plotting1/plot4.R')
